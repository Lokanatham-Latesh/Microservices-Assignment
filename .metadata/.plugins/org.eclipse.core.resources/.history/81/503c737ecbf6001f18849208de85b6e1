package com.mindfire.performancereviewservice.service.imp;

import org.modelmapper.ModelMapper;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.mindfire.performancereviewservice.entity.Feedback;
import com.mindfire.performancereviewservice.exception.FeedbackException;
import com.mindfire.performancereviewservice.repository.FeedbackRepository;

import com.mindfire.performancereviewservice.service.FeedbackService;
import com.shared.enums.Rating;
import com.shared.request.FeedbackRequest;
import com.shared.response.FeedbackResponse;

@Service
public class FeedbackServiceImpl implements FeedbackService {

    @Autowired
    private FeedbackRepository feedbackRepository;

    @Autowired
    private ModelMapper modelMapper;

    @Override
    public FeedbackResponse addFeedback(FeedbackRequest feedbackRequest) {
        try {
            Feedback feedback = new Feedback();
            feedback.setFeedback(feedbackRequest.getFeedback());

            try {
                Rating rating = Rating.valueOf(feedbackRequest.getRating().toUpperCase());
                feedback.setRating(rating);
            } catch (IllegalArgumentException e) {
                throw new FeedbackException("Invalid rating: " + feedbackRequest.getRating() + 
                    ". Allowed values: SLOW, AVERAGE, FAST, EXCEPTIONAL.");
            }

            feedback.setEmployeeId(feedbackRequest.getEmployeeId());
            Feedback savedFeedback = feedbackRepository.save(feedback);
            return modelMapper.map(savedFeedback, FeedbackResponse.class);
        }  catch (Exception e) {
            throw new FeedbackException("Error while adding feedback. Please try again later."e.getMessage());
        }
    }




   
    
}
